<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PasswordApi</name>
    </assembly>
    <members>
        <member name="T:PasswordApi.Controllers.PasswordController">
            <summary>
            This controller generates a random password.
            </summary>
        </member>
        <member name="M:PasswordApi.Controllers.PasswordController.Generate">
            <summary>
            Generates a secure, random password of DefaultLength.
            </summary>
            <returns>Cryptographically secure password</returns>
            <responce code="200">Returns a secure password</responce>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:PasswordApi.Controllers.PasswordController.Generate(System.Int32)">
            <summary>
            Generates a secure, random password of the specified length.
            </summary>
            <param name="length">Character length. Must be at least 8, and not above 255.</param>
            <returns>Cryptographically secure password</returns>
            <response code="200">Returns a secure password</response>
            <response code="418">If the length is invalid, you are a teapot</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="T:PasswordApi.Controllers.UserController">
            <summary>
            This class represents the user controller.
            </summary>
            <param name="logger">Instance implementing ILogger used for logging</param>
            <param name="userDb">Db context for user database interactions</param>
        </member>
        <member name="M:PasswordApi.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{PasswordApi.Controllers.UserController},PasswordApi.Database.UserDbContext)">
            <summary>
            This class represents the user controller.
            </summary>
            <param name="logger">Instance implementing ILogger used for logging</param>
            <param name="userDb">Db context for user database interactions</param>
        </member>
        <member name="M:PasswordApi.Controllers.UserController.Get">
            <summary>
            Returns all users in the database.
            </summary>
            <returns>List of users</returns>
            <response code="200">Returns all users</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:PasswordApi.Controllers.UserController.Post(PasswordApi.Models.UserModel)">
            <summary>
            Creates a new user in the database.
            </summary>
            <param name="user">Simplified user class which contains username and password only</param>
            <returns>Appropriate status code response</returns>
            <response code="201">If everything is correct and user was created</response>
            <response code="409">If username already exists</response>
            <response code="400">If exception is thrown</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:PasswordApi.Controllers.UserController.Login(PasswordApi.Models.UserToValidate)">
            <summary>
            This method is used to authenticate a user.
            </summary>
            <param name="user">Simplified user class which contains username and password only</param>
            <returns>Appropriate status code response</returns>
            <response code="200">If everything is correct</response>
            <response code="404">If user does not exist</response>
            <response code="401">If password is incorrect</response>
        </member>
        <member name="M:PasswordApi.Controllers.UserController.Put(PasswordApi.Models.UserModel)">
            <summary>
            This method is used to update a user's password.
            </summary>
            <param name="user">User instance to be updated</param>
            <returns>Appropriate status code response</returns>
            <response code="200">If everything is correct</response>
            <response code="404">If user does not exist</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:PasswordApi.Controllers.UserController.Delete(PasswordApi.Models.UserModel)">
            <summary>
            This method is used to delete a user.
            </summary>
            <param name="user">User instance to be deleted</param>
            <returns>Appropriate status code response</returns>
            <response code="200">If everything is correct</response>
            <response code="404">If user does not exist</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="T:PasswordApi.Migrations.initialApiDb">
            <inheritdoc />
        </member>
        <member name="M:PasswordApi.Migrations.initialApiDb.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PasswordApi.Migrations.initialApiDb.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PasswordApi.Migrations.initialApiDb.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:PasswordApi.Migrations.UserUpdated">
            <inheritdoc />
        </member>
        <member name="M:PasswordApi.Migrations.UserUpdated.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PasswordApi.Migrations.UserUpdated.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PasswordApi.Migrations.UserUpdated.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:PasswordApi.Models.UserModel">
            <summary>
            This class represents a user in the database.
            </summary>
        </member>
        <member name="P:PasswordApi.Models.UserModel.Name">
            <summary>
            This is the primary key for the user.
            </summary>
        </member>
        <member name="P:PasswordApi.Models.UserModel.Password">
            <summary>
            This is the password for the user.
            </summary>
        </member>
    </members>
</doc>
